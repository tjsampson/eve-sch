name: Eve-Sch CD

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build-n-push:
    env:
      GOOS: linux
      GOARCH: amd64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16.6'
      - run: go version

      - name: Set variables ‚ú®
        run: |          
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
          TS=$(date -u +%F_%TUTC)
          echo "BUILD_TIME=$TS" >> $GITHUB_ENV
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          BUILD_HOST=$(hostname)
          echo "BUILD_HOST=$BUILD_HOST" >> $GITHUB_ENV

      - name: Test üß†
        run: |
          go get ./...
          go test ./... -v -race

      - name: Set up Docker Buildx üê≥
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest

      - name: Cache Docker layers üê≥
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Check SemVer Tag üññ
        run: |
          echo "${{ env.VERSION }}"
          make check_version

      - name: JFrog Docker Login üê∏  
        uses: docker/login-action@v1
        with:
          registry: plainsight.jfrog.io
          username: ${{ secrets.JFROG_CI_RWO_USER }}
          password: ${{ secrets.JFROG_CI_RWO_PASS }}          

      - name: Docker Image üê≥
        if: ${{ contains(github.ref, 'master') }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          buildArgs: |
            VERSION=${{ env.VERSION }}
            SHA=${{ github.sha }}
            SHORT_SHA=${{ env.SHORT_SHA }}
            AUTHOR='${{ github.actor }}' 
            BUILD_HOST='${{ env.BUILD_HOST }}' 
            BRANCH=${{ github.ref }}
            BUILD_DATE='${{ env.BUILD_TIME }}' 
            PRERELEASE=''            
          tags: |
            plainsight.jfrog.io/docker-int/ops/eve-sch-v1:${{ env.VERSION }}

      - name: Add JFrog Props üê∏
        run: |
            curl --fail -H "X-JFrog-Art-Api:${{ secrets.JFROG_CI_RWO_API_KEY }}" \
                -X PUT \
                https://plainsight.jfrog.io/artifactory/api/storage/docker-int-local/ops/eve-sch-v1/${{ env.VERSION }}\?properties=version=${{ env.VERSION }}.${{ github.run_number }}%7Cgit-build-properties.project-id=${{ github.repository }}%7Cgit-build-properties.git-sha=${{ github.sha }}%7Cgit-build-properties.git-branch=${{ github.ref }}

